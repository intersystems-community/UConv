<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Routine name="importGlobal" type="MAC" languagemode="0"><![CDATA[
#include Globs
#include %occStatus
#include %occMessages
Start(link)
	set curGl=""
	set file = ##class(%Stream.FileCharacter).%New()
	set file.Filename=link
	set buf=""
	set blockGot=0
	if (link="")
	{
		set status=0
		// Via socket
		set sock = ##class(%IO.ServerSocket).%New(), sock.TranslationTable="UTF8" 
  		do sock.Open("7031",1,.sc)
  		if $$$ISOK(sc) {

    	do sock.Listen()
    	do	{	
    		set packetSize=sock.Read($$$PACKETLENGTH, -1)
    		if (packetSize="") q
    		set l=##class(Globals.Utils).WordToValue($c($zh($e(packetSize,1,4)),$zh($e(packetSize,5,*))))
    		
    		//Получили длину пакета
    		do sock.Write($c(1,1,1))
    		set s=sock.Read(l, -1)
    		set blockGot=$increment(blockGot)
    		if (blockGot # $$$BLOCKTICK = 0) w $c(13),"                                    ",$c(13),$$$T("Packets read:"),blockGot
    		//set s=##class(Globals.Utils).decode(s)
    		set buf=(buf_s) 
    		while ($f(buf,$$$NL)>0) 
    			{
	    			q:buf=$$$NL
	    			do ##class(Globals.Utils).executeString($e(buf,1,$f(buf,$$$NL)-3),.curGl) //все ок, NL не может быть в начале пакета
	    			set buf=$e(buf,$f(buf,$$$NL),*)	
	    		}
	    	do sock.Write($c(1,1,1))
    		}
    		while(s'="")
    		do sock.Close()
    		set status=1
	} else {w "CANT CREATE SOCK",!}
	}
	else 
		{
		if (file.IsNull()) { w !,$$$T("Cannot open file! Please retry!"),! GOTO Import^impexp}
		set status=0
		while ('file.AtEnd) {
			set packetSize=file.Read($$$PACKETLENGTH),ll=""
			if (packetSize="") q
			set l=##class(Globals.Utils).WordToValue($c($zh($e(packetSize,1,4)),$zh($e(packetSize,5,*))))
			set s = file.Read(l)
			set blockGot=$increment(blockGot)
			if (blockGot # $$$BLOCKTICK = 0) w $c(13),$$$T("                                    "),$c(13),$$$T("Packets read:"),blockGot
			//set s=##class(Globals.Utils).decode(s)
    		set buf=buf_s
    		while ($f(buf,$$$NL)>0) 
    			{
	    			q:buf=$$$NL
	    			do ##class(Globals.Utils).executeString($e(buf,1,$f(buf,$$$NL)-3),.curGl)
	    			set buf=$e(buf,$f(buf,$$$NL),*)	    		
	    		}
	    		set status=1
			}
		}
	
	w !
	if (status) {w $$$T("Successfully imported!"),!,$$$T("Blocks got: "),blockGot}
	else {w $$$T("Cannot open file! Please retry!"),!  GOTO Import^impexp}
]]></Routine>
</Export>
