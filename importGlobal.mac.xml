<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Routine name="importGlobal" type="MAC" languagemode="0"><![CDATA[
#include Globs
#include %occStatus
#include %occMessages
Start(link)
	set file = ##class(%Stream.FileCharacter).%New()
	set file.Filename=link
	set buf=""
	set blockGot=0
	if (link="")
	{
		// Via socket
		set sock = ##class(%IO.ServerSocket).%New(), sock.TranslationTable="UTF8" 
  		do sock.Open("7031",1,.sc)
  		if $$$ISOK(sc) {

    	do sock.Listen()
    	do	{	
    		set ttt=sock.Read(4, -1)
    		set ll=""
    		for i=1:2:$l(ttt) set ll=ll_$c($zh($e(ttt,i,i+1)))
    		set l=##class(Globals.Utils).WordToValue(ll)
    		do sock.Write($c(1,1,1))
    		set s=sock.Read(l, -1)
    		set blockGot=$increment(blockGot)
    		set s=##class(Globals.Utils).decode(s)
    		set buf=(buf_s) 
    		while ($f(buf,$$$NL)>0) 
    			{
	    			q:buf=$$$NL
	    			do ##class(Globals.Utils).executeString($e(buf,1,$f(buf,$$$NL)-3)) //все ок, NL не может быть в начале пакета
	    			set buf=$e(buf,$f(buf,$$$NL),*)	
	    		}
	    	do sock.Write($c(1,1,1))
    		}
    		while(s'="")
    		do sock.Close()
	} else {w "CANT CREATE SOCK",!}
	}
	else 
		{
		while ('file.AtEnd) {
			set s = file.Read($$$BLOCKSIZE)
			
			set s=##class(Globals.Utils).decode(s)
    		set buf=buf_s
    		while ($f(buf,$$$NL)>0) 
    			{
	    			do ##class(Globals.Utils).executeString($e(buf,1,$f(buf,$$$NL)-3))
	    			set buf=$e(buf,$f(buf,$$$NL),*)	    		
	    		}
			}
		}
	
	w "Successfully imported!",!,"Blocks got: ",blockGot
]]></Routine>
</Export>
